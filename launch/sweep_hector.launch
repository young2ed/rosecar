<!-- -*- mode: XML -*- -->
<launch>
	<!-- optionally launch in GDB, for debugging -->
	<arg name="debug" default="false" />
	<arg if="$(arg debug)" name="launch_prefix" value="xterm -e gdb --args" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	
	<!-- base  -->
	<include file="/home/nvidia/RoseCar/launch/rosecar.launch" />

	<arg name="geotiff_map_file_path" default="/home/nvidia/RoseCar/maps"/>

	<!-- sweep_node -->
	<node pkg="sweep_ros"  type="sweep_node" name="sweep_node" ns="rosecar"
		output="screen" launch-prefix="$(arg launch_prefix)" >
		<param name="serial_port" type="string" value="/dev/ttyUSB0"/>
		<param name="serial_baudrate" type="int" value="115200"/>
		<param name="frame_id" type="string" value="laser"/>
		<param name="rotation_speed" type="int" value="3"/>
		<param name="sample_rate" type="int" value="1000"/>
		<remap from="pc2" to="/sweep_pc2"/>
	</node>
	
    <!-- pointcloud_to_laserscan_node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="sweep_pointcloud_to_laserscan"
		output="screen" launch-prefix="$(arg launch_prefix)" >
        <remap from="cloud_in" to="/sweep_pc2"/>
		<remap from="scan" to="/sweep_scan"/>
        <rosparam>
            target_frame: laser # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.001
            min_height: -1.0
            max_height: 1.0

            angle_min: -3.14 # -M_PI/2
            angle_max: 3.14 # M_PI/2
            angle_increment: 0.0174533 # M_PI/360.0
            scan_time: 0.3
            range_min: 0.0
            range_max: 20.0
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
    </node>

	<!-- laser_scan_matcher --> 
	<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node"
		output="screen" launch-prefix="$(arg launch_prefix)" >
        <param name="fixed_frame" value = "odom"/>
        <param name="base_frame" value = "base_link"/>
        <param name="publish_tf" value="true"/>
		<param name="use_cloud_input" value="false"/>
        <param name="use_odom" value="false"/>
        <param name="use_imu" value="false"/>
        <param name="max_iterations" value="10"/>
		<remap from="scan" to="/sweep_scan"/>
		<remap from="cloud" to="/sweep_pc2"/>
		<remap from="odom" to="/vesc/odom"/>
    </node>

	
  	<arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
  	<arg name="base_frame" default="base_link"/>
  	<arg name="odom_frame" default="odom"/>
  	<arg name="pub_map_odom_transform" default="true"/>
  	<arg name="scan_subscriber_queue_size" default="5"/>
  	<arg name="scan_topic" default="sweep_scan"/>
  	<arg name="map_size" default="2048"/>
  
  	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
		<!-- Frame names -->
		<param name="map_frame" value="map" />
		<param name="base_frame" value="$(arg base_frame)" />
		<param name="odom_frame" value="$(arg odom_frame)" />
		
		<!-- Tf use -->
		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
		
		<!-- Map size / start point -->
		<param name="map_resolution" value="0.050"/>
		<param name="map_size" value="$(arg map_size)"/>
		<param name="map_start_x" value="0.5"/>
		<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="2" />
		
		<!-- Map update parameters -->
		<param name="update_factor_free" value="0.4"/>
		<param name="update_factor_occupied" value="0.9" />    
		<param name="map_update_distance_thresh" value="0.4"/>
		<param name="map_update_angle_thresh" value="0.06" />
		<param name="laser_z_min_value" value = "-1.0" />
		<param name="laser_z_max_value" value = "1.0" />
		
		<!-- Advertising config --> 
		<param name="advertise_map_service" value="true"/>
		
		<param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
		<param name="scan_topic" value="$(arg scan_topic)"/>
		
		<!-- Debug parameters -->
		<!--
		  <param name="output_timing" value="false"/>
		  <param name="pub_drawings" value="true"/>
		  <param name="pub_debug_output" value="true"/>
		-->
		<param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
  	</node>

  	<arg name="map_file_path" default="$(find hector_geotiff)/maps"/>
  	<arg name="map_file_base_name" default="hector_slam_map"/>

  	<node pkg="hector_geotiff" type="geotiff_node" name="hector_geotiff_node" output="screen" launch-prefix="nice -n 15">
		<remap from="map" to="/dynamic_map" />
		<param name="map_file_path" type="string" value="$(arg map_file_path)" />
		<param name="map_file_base_name" type="string" value="$(arg map_file_base_name)" />
		<param name="geotiff_save_period" type="double" value="0" />
		<param name="draw_background_checkerboard" type="bool" value="true" />
		<param name="draw_free_space_grid" type="bool" value="true" />
		<param name="plugins" type="string" value="hector_geotiff_plugins/TrajectoryMapWriter" />
  	</node>
	
	<node pkg="rviz" type="rviz" name="my_rviz" 
	args="-d /home/nvidia/RoseCar/rviz/hector.rviz" />
	
</launch>
